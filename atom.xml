<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>like a bird</title>
  
  <subtitle>call me by your name</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-31T14:08:51.969Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>��</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小型桌面计算器</title>
    <link href="http://yoursite.com/2018/03/31/%E5%B0%8F%E5%9E%8B%E6%A1%8C%E9%9D%A2%E8%AE%A1%E7%AE%97%E5%99%A8-1/"/>
    <id>http://yoursite.com/2018/03/31/小型桌面计算器-1/</id>
    <published>2018-03-31T14:07:44.000Z</published>
    <updated>2018-03-31T14:08:51.969Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="&#x4E00;&#x4E2A;&#x5C0F;&#x578B;&#x7684;&#x684C;&#x9762;&#x8BA1;&#x7B97;&#x5668;"><a href="#&#x4E00;&#x4E2A;&#x5C0F;&#x578B;&#x7684;&#x684C;&#x9762;&#x8BA1;&#x7B97;&#x5668;" class="headerlink" title="&#x4E00;&#x4E2A;&#x5C0F;&#x578B;&#x7684;&#x684C;&#x9762;&#x8BA1;&#x7B97;&#x5668;"></a>&#x4E00;&#x4E2A;&#x5C0F;&#x578B;&#x7684;&#x684C;&#x9762;&#x8BA1;&#x7B97;&#x5668;</h1><p>&#x4E3B;&#x8981;&#x662F;&#x9488;&#x5BF9;&#x4E00;&#x4E9B;&#x4E0D;&#x5408;&#x6CD5;&#x8F93;&#x5165;&#x7684;&#x5904;&#x7406;</p><p>##1.&#x7A0B;&#x5E8F;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;##</p> <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum Token_value{NAME,NUMBER,END,PLUS=&apos;+&apos;,MINUS=&apos;-&apos;,MUL=&apos;*&apos;,DIV=&apos;/&apos;,PRINT=&apos;;&apos;,ASSIGN=&apos;=&apos;,LP=&apos;(&apos;,RP=&apos;)&apos;,};</span><br></pre></td></tr></tbody></table></figure><p>##2.5&#x4E2A;&#x5168;&#x5C40;&#x53D8;&#x91CF;</p> <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Token_value         curr_tok=PRINT;  </span><br><span class="line">double              number_value;  </span><br><span class="line">string              string_value;  </span><br><span class="line">map&lt;string.double&gt;  table;  </span><br><span class="line">int                 no_of_errors;</span><br></pre></td></tr></tbody></table></figure><p>(1)<strong>curr_tok</strong>:&#x5728;<strong>get_token</strong>&#x4E2D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;<strong>expr&#x3001;term&#x3001;prim&#x3001;</strong>&#x4E2D;&#x7684;<strong>switch</strong>&#x4E2D;&#x4F7F;&#x7528;&#x3002;&#x4ED6;&#x8868;&#x793A;&#x7684;&#x662F;&#x5F53;&#x524D;&#x8BFB;&#x5165;&#x7684;&#x6807;&#x8BB0;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x7528;&#x6765;&#x63A7;&#x5236;&#x5206;&#x7C7B;&#x522B;&#x7684;&#x6C42;&#x503C;&#x53CA;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x3002;<br>(2)<strong>number_value</strong>:&#x5728;<strong>get_token</strong>&#x4E2D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;<strong>prim</strong>&#x4E2D;&#x4F7F;&#x7528;&#x3002;&#x5B83;&#x8868;&#x793A;&#x7684;&#x662F;&#x5F53;&#x524D;&#x8BFB;&#x5165;&#x7684;&#x503C;&#x7684;&#x5B57;&#x9762;&#x503C;&#x3002;<br>(3)<strong>string_value</strong>:&#x5728;<strong>get_token</strong>&#x4E2D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;<strong>prim</strong>&#x4E2D;&#x4F7F;&#x7528;<br>&#x3002;&#x5B83;&#x8868;&#x8FBE;&#x7684;&#x662F;&#x5F53;&#x524D;&#x8BFB;&#x5165;&#x7684;&#x7B26;&#x53F7;&#x540D;&#xFF0C;&#x7528;&#x6765;&#x5728;<strong>table</strong>&#x4E2D;&#x67E5;&#x627E;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x503C;&#x3002;<br>(4)<strong>table</strong>:&#x5728;<strong>prim</strong>&#x4E2D;&#x4F7F;&#x7528;&#x3002;&#x5B83;&#x8868;&#x793A;&#x5DF2;&#x7ECF;&#x8BFB;&#x5165;&#x7684;&#x7B26;&#x53F7;&#x540D;&#x4E0E;&#x5BF9;&#x5E94;&#x6570;&#x503C;&#xFF0C;&#x7B26;&#x53F7;&#x540D;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x503C;&#x901A;&#x8FC7;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x9690;&#x542B;&#x7684;&#x8D4B;&#x503C;&#x3002;<br>(5)<strong>no_of_errors</strong>:&#x5728;<strong>error</strong>&#x4E2D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;<strong>main</strong>&#x4E2D;&#x4F7F;&#x7528;&#x3002;&#x8868;&#x793A;&#x7684;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p>##3.&#x4EE3;&#x7801;<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt; </span><br><span class="line">#include&lt;string&gt; </span><br><span class="line">#include&lt;map&gt; </span><br><span class="line">#include&lt;cctype&gt; </span><br><span class="line">  </span><br><span class="line">using namespace std;  </span><br><span class="line">enum Token_value </span><br><span class="line">{ </span><br><span class="line">NAME,NUMBER,END,PLUS=&apos;+&apos;,MINUS=&apos;-&apos;,MUL=&apos;*&apos;,DIV=&apos;/&apos;,PRINT=&apos;;&apos;,ASSIGN=&apos;=&apos;,LP=&apos;(&apos;,RP=&apos;)&apos;  </span><br><span class="line">};  </span><br><span class="line">Token_value curr_tok = PRINT; </span><br><span class="line">double number_value; </span><br><span class="line">string string_value;  </span><br><span class="line">map&lt;string,double&gt; table; </span><br><span class="line">int no_of_errors; </span><br><span class="line">double expr(bool get);  </span><br><span class="line">double term(bool get); </span><br><span class="line">double prim(bool get); </span><br><span class="line">Token_value get_token();  </span><br><span class="line">double error(const string&amp; s);//&#x8FD9;&#x4E9B;&#x58F0;&#x660E;&#x662F;&#x5FC5;&#x4E0D;&#x53EF;&#x5C11;&#x7684;&#xFF01;</span><br><span class="line">Token_value get_token() </span><br><span class="line">{ </span><br><span class="line">char ch = 0; </span><br><span class="line">cin &gt;&gt; ch; </span><br><span class="line">switch (ch) </span><br><span class="line">{  </span><br><span class="line">case 0: </span><br><span class="line">return curr_tok = END; </span><br><span class="line">case &apos;;&apos;: </span><br><span class="line">case &apos;*&apos;: </span><br><span class="line">case &apos;/&apos;: </span><br><span class="line">case &apos;+&apos;: </span><br><span class="line">case &apos;-&apos;:  </span><br><span class="line">case &apos;(&apos;:  </span><br><span class="line">case &apos;)&apos;:   </span><br><span class="line">case &apos;=&apos;:  </span><br><span class="line">return curr_tok = Token_value(ch); </span><br><span class="line">case &apos;0&apos;:case &apos;1&apos;:case &apos;2&apos;:case &apos;3&apos;:case &apos;4&apos;:  </span><br><span class="line">case &apos;5&apos;:case &apos;6&apos;:case &apos;7&apos;:case &apos;8&apos;:case &apos;9&apos;:</span><br><span class="line">case &apos;.&apos;: </span><br><span class="line">cin.putback(ch); </span><br><span class="line">cin &gt;&gt; number_value; </span><br><span class="line">return curr_tok = NUMBER; </span><br><span class="line">default: </span><br><span class="line">if (isalpha(ch)) </span><br><span class="line">{ </span><br><span class="line">cin.putback(ch); </span><br><span class="line">cin &gt;&gt; string_value; </span><br><span class="line">return curr_tok = NAME; </span><br><span class="line">}  </span><br><span class="line">error(&quot;bad token&quot;); </span><br><span class="line">return curr_tok = PRINT;  </span><br><span class="line">} </span><br><span class="line">}  </span><br><span class="line">double error(const string&amp; s) </span><br><span class="line">{  </span><br><span class="line">no_of_errors++;  </span><br><span class="line">cerr&lt;&lt;&quot;error:&quot;&lt;&lt;s&lt;&lt;&quot;\n&quot;; </span><br><span class="line">return 1; </span><br><span class="line">}  </span><br><span class="line">double expr(bool get) // add and subtract </span><br><span class="line">{ </span><br><span class="line">double left = term(get); </span><br><span class="line">for (;;) </span><br><span class="line">switch (curr_tok) </span><br><span class="line">{  </span><br><span class="line">case PLUS:  </span><br><span class="line">left+=term(true); </span><br><span class="line">break; </span><br><span class="line">case MINUS: </span><br><span class="line">left-=term(true); </span><br><span class="line">break; </span><br><span class="line">default: return left; </span><br><span class="line">}  </span><br><span class="line">}  </span><br><span class="line">// multiply and divide  </span><br><span class="line">double term(bool get) </span><br><span class="line">{ </span><br><span class="line">double left = prim(get);</span><br><span class="line"> </span><br><span class="line">for (;;) </span><br><span class="line">switch (curr_tok) </span><br><span class="line">{ </span><br><span class="line">case MUL: </span><br><span class="line">left*= prim(true); </span><br><span class="line">break; </span><br><span class="line">case DIV: </span><br><span class="line">if (double d=prim(true)) </span><br><span class="line">{ left/=d; break; } </span><br><span class="line">return error(&quot;divide by 0&quot;); </span><br><span class="line">default: return left; </span><br><span class="line">} </span><br><span class="line">} </span><br><span class="line">double prim(bool get) </span><br><span class="line">{ </span><br><span class="line">if(get) </span><br><span class="line">get_token(); </span><br><span class="line"> </span><br><span class="line">switch(curr_tok)  </span><br><span class="line">{  </span><br><span class="line">case NUMBER: </span><br><span class="line">{ </span><br><span class="line">double v=number_value; </span><br><span class="line">get_token();  </span><br><span class="line">return v;  </span><br><span class="line">}  </span><br><span class="line">case NAME: </span><br><span class="line">{ </span><br><span class="line">double&amp; v=table[string_value]; </span><br><span class="line">if(get_token()==ASSIGN) </span><br><span class="line">v=expr(true); </span><br><span class="line">return v;  </span><br><span class="line">}  </span><br><span class="line"> </span><br><span class="line">case MINUS: </span><br><span class="line">return -prim(true); </span><br><span class="line">case LP: </span><br><span class="line">{ </span><br><span class="line">double e=expr(true); </span><br><span class="line">if(curr_tok!=RP)  </span><br><span class="line">return error(&quot;) expected&quot;); </span><br><span class="line">get_token(); </span><br><span class="line">return e;</span><br><span class="line">}  </span><br><span class="line">default: </span><br><span class="line">return error(&quot;primary expected&quot;); </span><br><span class="line">}  </span><br><span class="line">}  </span><br><span class="line">int main()  </span><br><span class="line">{ </span><br><span class="line">table[&quot;pi&quot;] = 3.1415926535897932385; </span><br><span class="line">table[&quot;e&quot;] = 2.7182818284590452354;  </span><br><span class="line">cout&lt;&lt;&quot;&#x60A8;&#x5C06;&#x8FDB;&#x5165;&#x8BA1;&#x7B97;&#x5668;&#x6A21;&#x5F0F;&quot;&lt;&lt;endl&lt;&lt;&quot;&#x8BF7;&#x8F93;&#x5165;&#x60A8;&#x8981;&#x8BA1;&#x7B97;&#x7684;&#x7B97;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x5E76;&#x4EE5;&#x7B49;&#x53F7;&#x7ED3;&#x675F;&quot;&lt;&lt;endl; </span><br><span class="line">while (cin)  </span><br><span class="line">{ </span><br><span class="line">get_token(); </span><br><span class="line">if (curr_tok == END) break; </span><br><span class="line">if (curr_tok == PRINT) continue; </span><br><span class="line">cout &lt;&lt; expr(false) &lt;&lt; &apos;\n&apos;;  </span><br><span class="line">} </span><br><span class="line">std::cout&lt;&lt;&quot;&#x4E3A;&#x60A8;&#x5F97;&#x5230;&#x7684;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;&lt;&lt;endl;&quot;; </span><br><span class="line">return no_of_errors; </span><br><span class="line">system(&quot;pause&quot;); </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({});</script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;&amp;#x4E00;&amp;#x4E2A;&amp;#x5C0F;&amp;#x578B;&amp;#x7684;&amp;#x684C;&amp;#x9762;&amp;#x8BA1;&amp;#x7B97;&amp;#x5668;&quot;&gt;&lt;a href=&quot;#&amp;#x4E00;&amp;#x4E2A
      
    
    </summary>
    
      <category term="c++" scheme="http://yoursite.com/categories/c/"/>
    
    
  </entry>
  
  <entry>
    <title>小型桌面计算器</title>
    <link href="http://yoursite.com/2018/03/30/%E5%B0%8F%E5%9E%8B%E6%A1%8C%E9%9D%A2%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>http://yoursite.com/2018/03/30/小型桌面计算器/</id>
    <published>2018-03-30T12:03:37.000Z</published>
    <updated>2018-03-30T14:43:17.774Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h1 id="&#x4E00;&#x4E2A;&#x5C0F;&#x578B;&#x7684;&#x684C;&#x9762;&#x8BA1;&#x7B97;&#x5668;"><a href="#&#x4E00;&#x4E2A;&#x5C0F;&#x578B;&#x7684;&#x684C;&#x9762;&#x8BA1;&#x7B97;&#x5668;" class="headerlink" title="&#x4E00;&#x4E2A;&#x5C0F;&#x578B;&#x7684;&#x684C;&#x9762;&#x8BA1;&#x7B97;&#x5668;"></a>&#x4E00;&#x4E2A;&#x5C0F;&#x578B;&#x7684;&#x684C;&#x9762;&#x8BA1;&#x7B97;&#x5668;</h1><p>&#x4E3B;&#x8981;&#x662F;&#x9488;&#x5BF9;&#x4E00;&#x4E9B;&#x4E0D;&#x5408;&#x6CD5;&#x8F93;&#x5165;&#x7684;&#x5904;&#x7406;</p><p>##1.&#x7A0B;&#x5E8F;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;##</p> <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum Token_value{NAME,NUMBER,END,PLUS=&apos;+&apos;,MINUS=&apos;-&apos;,MUL=&apos;*&apos;,DIV=&apos;/&apos;,PRINT=&apos;;&apos;,ASSIGN=&apos;=&apos;,LP=&apos;(&apos;,RP=&apos;)&apos;,};</span><br></pre></td></tr></tbody></table></figure><p>##2.5&#x4E2A;&#x5168;&#x5C40;&#x53D8;&#x91CF;</p> <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Token_value         curr_tok=PRINT;  </span><br><span class="line">double              number_value;  </span><br><span class="line">string              string_value;  </span><br><span class="line">map&lt;string.double&gt;  table;  </span><br><span class="line">int                 no_of_errors;</span><br></pre></td></tr></tbody></table></figure><p>(1)<strong>curr_tok</strong>:&#x5728;<strong>get_token</strong>&#x4E2D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;<strong>expr&#x3001;term&#x3001;prim&#x3001;</strong>&#x4E2D;&#x7684;<strong>switch</strong>&#x4E2D;&#x4F7F;&#x7528;&#x3002;&#x4ED6;&#x8868;&#x793A;&#x7684;&#x662F;&#x5F53;&#x524D;&#x8BFB;&#x5165;&#x7684;&#x6807;&#x8BB0;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x7528;&#x6765;&#x63A7;&#x5236;&#x5206;&#x7C7B;&#x522B;&#x7684;&#x6C42;&#x503C;&#x53CA;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x3002;<br>(2)<strong>number_value</strong>:&#x5728;<strong>get_token</strong>&#x4E2D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;<strong>prim</strong>&#x4E2D;&#x4F7F;&#x7528;&#x3002;&#x5B83;&#x8868;&#x793A;&#x7684;&#x662F;&#x5F53;&#x524D;&#x8BFB;&#x5165;&#x7684;&#x503C;&#x7684;&#x5B57;&#x9762;&#x503C;&#x3002;<br>(3)<strong>string_value</strong>:&#x5728;<strong>get_token</strong>&#x4E2D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;<strong>prim</strong>&#x4E2D;&#x4F7F;&#x7528;<br>&#x3002;&#x5B83;&#x8868;&#x8FBE;&#x7684;&#x662F;&#x5F53;&#x524D;&#x8BFB;&#x5165;&#x7684;&#x7B26;&#x53F7;&#x540D;&#xFF0C;&#x7528;&#x6765;&#x5728;<strong>table</strong>&#x4E2D;&#x67E5;&#x627E;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x503C;&#x3002;<br>(4)<strong>table</strong>:&#x5728;<strong>prim</strong>&#x4E2D;&#x4F7F;&#x7528;&#x3002;&#x5B83;&#x8868;&#x793A;&#x5DF2;&#x7ECF;&#x8BFB;&#x5165;&#x7684;&#x7B26;&#x53F7;&#x540D;&#x4E0E;&#x5BF9;&#x5E94;&#x6570;&#x503C;&#xFF0C;&#x7B26;&#x53F7;&#x540D;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x503C;&#x901A;&#x8FC7;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x9690;&#x542B;&#x7684;&#x8D4B;&#x503C;&#x3002;<br>(5)<strong>no_of_errors</strong>:&#x5728;<strong>error</strong>&#x4E2D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;<strong>main</strong>&#x4E2D;&#x4F7F;&#x7528;&#x3002;&#x8868;&#x793A;&#x7684;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x6570;&#x91CF;&#x3002;</p><p>##3.&#x4EE3;&#x7801;<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt; </span><br><span class="line">#include&lt;string&gt; </span><br><span class="line">#include&lt;map&gt; </span><br><span class="line">#include&lt;cctype&gt; </span><br><span class="line">  </span><br><span class="line">using namespace std;  </span><br><span class="line">enum Token_value </span><br><span class="line">{ </span><br><span class="line">NAME,NUMBER,END,PLUS=&apos;+&apos;,MINUS=&apos;-&apos;,MUL=&apos;*&apos;,DIV=&apos;/&apos;,PRINT=&apos;;&apos;,ASSIGN=&apos;=&apos;,LP=&apos;(&apos;,RP=&apos;)&apos;  </span><br><span class="line">};  </span><br><span class="line">Token_value curr_tok = PRINT; </span><br><span class="line">double number_value; </span><br><span class="line">string string_value;  </span><br><span class="line">map&lt;string,double&gt; table; </span><br><span class="line">int no_of_errors; </span><br><span class="line">double expr(bool get);  </span><br><span class="line">double term(bool get); </span><br><span class="line">double prim(bool get); </span><br><span class="line">Token_value get_token();  </span><br><span class="line">double error(const string&amp; s);//&#x8FD9;&#x4E9B;&#x58F0;&#x660E;&#x662F;&#x5FC5;&#x4E0D;&#x53EF;&#x5C11;&#x7684;&#xFF01;</span><br><span class="line">Token_value get_token() </span><br><span class="line">{ </span><br><span class="line">char ch = 0; </span><br><span class="line">cin &gt;&gt; ch; </span><br><span class="line">switch (ch) </span><br><span class="line">{  </span><br><span class="line">case 0: </span><br><span class="line">return curr_tok = END; </span><br><span class="line">case &apos;;&apos;: </span><br><span class="line">case &apos;*&apos;: </span><br><span class="line">case &apos;/&apos;: </span><br><span class="line">case &apos;+&apos;: </span><br><span class="line">case &apos;-&apos;:  </span><br><span class="line">case &apos;(&apos;:  </span><br><span class="line">case &apos;)&apos;:   </span><br><span class="line">case &apos;=&apos;:  </span><br><span class="line">return curr_tok = Token_value(ch); </span><br><span class="line">case &apos;0&apos;:case &apos;1&apos;:case &apos;2&apos;:case &apos;3&apos;:case &apos;4&apos;:  </span><br><span class="line">case &apos;5&apos;:case &apos;6&apos;:case &apos;7&apos;:case &apos;8&apos;:case &apos;9&apos;:</span><br><span class="line">case &apos;.&apos;: </span><br><span class="line">cin.putback(ch); </span><br><span class="line">cin &gt;&gt; number_value; </span><br><span class="line">return curr_tok = NUMBER; </span><br><span class="line">default: </span><br><span class="line">if (isalpha(ch)) </span><br><span class="line">{ </span><br><span class="line">cin.putback(ch); </span><br><span class="line">cin &gt;&gt; string_value; </span><br><span class="line">return curr_tok = NAME; </span><br><span class="line">}  </span><br><span class="line">error(&quot;bad token&quot;); </span><br><span class="line">return curr_tok = PRINT;  </span><br><span class="line">} </span><br><span class="line">}  </span><br><span class="line">double error(const string&amp; s) </span><br><span class="line">{  </span><br><span class="line">no_of_errors++;  </span><br><span class="line">cerr&lt;&lt;&quot;error:&quot;&lt;&lt;s&lt;&lt;&quot;\n&quot;; </span><br><span class="line">return 1; </span><br><span class="line">}  </span><br><span class="line">double expr(bool get) // add and subtract </span><br><span class="line">{ </span><br><span class="line">double left = term(get); </span><br><span class="line">for (;;) </span><br><span class="line">switch (curr_tok) </span><br><span class="line">{  </span><br><span class="line">case PLUS:  </span><br><span class="line">left+=term(true); </span><br><span class="line">break; </span><br><span class="line">case MINUS: </span><br><span class="line">left-=term(true); </span><br><span class="line">break; </span><br><span class="line">default: return left; </span><br><span class="line">}  </span><br><span class="line">}  </span><br><span class="line">// multiply and divide  </span><br><span class="line">double term(bool get) </span><br><span class="line">{ </span><br><span class="line">double left = prim(get);</span><br><span class="line"> </span><br><span class="line">for (;;) </span><br><span class="line">switch (curr_tok) </span><br><span class="line">{ </span><br><span class="line">case MUL: </span><br><span class="line">left*= prim(true); </span><br><span class="line">break; </span><br><span class="line">case DIV: </span><br><span class="line">if (double d=prim(true)) </span><br><span class="line">{ left/=d; break; } </span><br><span class="line">return error(&quot;divide by 0&quot;); </span><br><span class="line">default: return left; </span><br><span class="line">} </span><br><span class="line">} </span><br><span class="line">double prim(bool get) </span><br><span class="line">{ </span><br><span class="line">if(get) </span><br><span class="line">get_token(); </span><br><span class="line"> </span><br><span class="line">switch(curr_tok)  </span><br><span class="line">{  </span><br><span class="line">case NUMBER: </span><br><span class="line">{ </span><br><span class="line">double v=number_value; </span><br><span class="line">get_token();  </span><br><span class="line">return v;  </span><br><span class="line">}  </span><br><span class="line">case NAME: </span><br><span class="line">{ </span><br><span class="line">double&amp; v=table[string_value]; </span><br><span class="line">if(get_token()==ASSIGN) </span><br><span class="line">v=expr(true); </span><br><span class="line">return v;  </span><br><span class="line">}  </span><br><span class="line"> </span><br><span class="line">case MINUS: </span><br><span class="line">return -prim(true); </span><br><span class="line">case LP: </span><br><span class="line">{ </span><br><span class="line">double e=expr(true); </span><br><span class="line">if(curr_tok!=RP)  </span><br><span class="line">return error(&quot;) expected&quot;); </span><br><span class="line">get_token(); </span><br><span class="line">return e;</span><br><span class="line">}  </span><br><span class="line">default: </span><br><span class="line">return error(&quot;primary expected&quot;); </span><br><span class="line">}  </span><br><span class="line">}  </span><br><span class="line">int main()  </span><br><span class="line">{ </span><br><span class="line">table[&quot;pi&quot;] = 3.1415926535897932385; </span><br><span class="line">table[&quot;e&quot;] = 2.7182818284590452354;  </span><br><span class="line">cout&lt;&lt;&quot;&#x60A8;&#x5C06;&#x8FDB;&#x5165;&#x8BA1;&#x7B97;&#x5668;&#x6A21;&#x5F0F;&quot;&lt;&lt;endl&lt;&lt;&quot;&#x8BF7;&#x8F93;&#x5165;&#x60A8;&#x8981;&#x8BA1;&#x7B97;&#x7684;&#x7B97;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#x5E76;&#x4EE5;&#x7B49;&#x53F7;&#x7ED3;&#x675F;&quot;&lt;&lt;endl; </span><br><span class="line">while (cin)  </span><br><span class="line">{ </span><br><span class="line">get_token(); </span><br><span class="line">if (curr_tok == END) break; </span><br><span class="line">if (curr_tok == PRINT) continue; </span><br><span class="line">cout &lt;&lt; expr(false) &lt;&lt; &apos;\n&apos;;  </span><br><span class="line">} </span><br><span class="line">std::cout&lt;&lt;&quot;&#x4E3A;&#x60A8;&#x5F97;&#x5230;&#x7684;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;&lt;&lt;endl;&quot;; </span><br><span class="line">return no_of_errors; </span><br><span class="line">system(&quot;pause&quot;); </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({});</script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id=&quot;&amp;#x4E00;&amp;#x4E2A;&amp;#x5C0F;&amp;#x578B;&amp;#x7684;&amp;#x684C;&amp;#x9762;&amp;#x8BA1;&amp;#x7B97;&amp;#x5668;&quot;&gt;&lt;a href=&quot;#&amp;#x4E00;&amp;#x4E2A
      
    
    </summary>
    
      <category term="c++" scheme="http://yoursite.com/categories/c/"/>
    
    
  </entry>
  
  <entry>
    <title>简单的汇编指令</title>
    <link href="http://yoursite.com/2018/03/26/%E7%AE%80%E5%8D%95%E7%9A%84%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/03/26/简单的汇编指令/</id>
    <published>2018-03-26T11:05:54.000Z</published>
    <updated>2018-03-26T11:09:01.316Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({});</script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;script src=&quot;/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887&quot;&gt;&lt;/script&gt;&lt;script&gt;L2Dwidget.init({});&lt;/
      
    
    </summary>
    
      <category term="汇编语言" scheme="http://yoursite.com/categories/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="汇编" scheme="http://yoursite.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>about the name</title>
    <link href="http://yoursite.com/2018/03/25/about-the-name/"/>
    <id>http://yoursite.com/2018/03/25/about-the-name/</id>
    <published>2018-03-25T13:09:52.000Z</published>
    <updated>2018-03-25T13:24:42.025Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>#&#x672A;&#x547D;&#x540D;#<br>&#x4E3A;&#x4EC0;&#x4E48;<br>&#x641E;&#x4E0D;&#x61C2;&#x554A;&#xFF01;&#xFF01;&#xFF01;</p><script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({});</script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;#&amp;#x672A;&amp;#x547D;&amp;#x540D;#&lt;br&gt;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&lt;br&gt;&amp;#x641E;&amp;#x4E0D;&amp;#x61C2;&amp;#x554A;&amp;#xFF01;&amp;#xFF01;&amp;#xFF0
      
    
    </summary>
    
      <category term="搭建博客与发文" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B8%8E%E5%8F%91%E6%96%87/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
      <category term="基础" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/25/test-ca/"/>
    <id>http://yoursite.com/2018/03/25/test-ca/</id>
    <published>2018-03-25T03:04:34.921Z</published>
    <updated>2018-03-26T11:02:11.810Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><hr><p>title: test_ca<br>date: 2018-03-25 11:04:34<br>tags: [&#x7F16;&#x7A0B;]</p><h2 id="categories-c-c"><a href="#categories-c-c" class="headerlink" title="categories: c/c++"></a>categories: c/c++</h2><script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({});</script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;hr&gt;
&lt;p&gt;title: test_ca&lt;br&gt;date: 2018-03-25 11:04:34&lt;br&gt;tags: [&amp;#x7F16;&amp;#x7A0B;]&lt;/p&gt;
&lt;h2 id=&quot;categories-c-c&quot;&gt;&lt;a href
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/24/pageabout/"/>
    <id>http://yoursite.com/2018/03/24/pageabout/</id>
    <published>2018-03-24T11:42:15.330Z</published>
    <updated>2018-03-25T04:08:09.202Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><hr><p>title: pageabout<br>date: 2018-03-24 19:42:15</p><h2 id="tags-&#x201C;about&#x201D;"><a href="#tags-&#x201C;about&#x201D;" class="headerlink" title="tags: &#x201C;about&#x201D;"></a>tags: &#x201C;about&#x201D;</h2><script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({});</script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;hr&gt;
&lt;p&gt;title: pageabout&lt;br&gt;date: 2018-03-24 19:42:15&lt;/p&gt;
&lt;h2 id=&quot;tags-&amp;#x201C;about&amp;#x201D;&quot;&gt;&lt;a href=&quot;#tags-&amp;#x201
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/03/23/hello-world/"/>
    <id>http://yoursite.com/2018/03/23/hello-world/</id>
    <published>2018-03-23T14:03:51.001Z</published>
    <updated>2018-03-23T14:03:51.006Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({});</script></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Che
      
    
    </summary>
    
    
  </entry>
  
</feed>
